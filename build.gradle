group 'com.waves.ikb4stream'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

sourceSets {
    test {
        java {
            srcDirs = ['src/core', 'src/consumer', 'src/producer', 'src/test/', 'src/datasource',
                       'src/datasource/weather', 'src/datasource/rss', 'src/communication/kafka']
        }
    }
    communication_kafka {
        java {
            srcDirs = ['src/core', 'src/communication/kafka']
            compileClasspath = configurations.compile
        }
    }
    consumer {
        java {
            srcDirs = ['src/core', 'src/consumer']
            compileClasspath = configurations.compile
        }
    }
    producer {
        java {
            srcDirs = ['src/core', 'src/producer']
            compileClasspath = configurations.compile
        }
    }
    datasource_meteo {
        java {
            srcDirs = ['src/core', 'src/datasource/weather']
            compileClasspath = configurations.compile
        }
    }
    datasource_rss {
        java {
            srcDirs = ['src/core', 'src/datasource/rss']
            compileClasspath = configurations.compile
        }
    }
}

task packageConsumerJar(type: Jar, description: 'Package the Consumer Jar') {
    archiveName = "ikb4stream-$version-consumer.jar"
    manifest {
        attributes 'Main-Class': 'com.waves_rsp.ikb4stream.consumer.Main'
    }
    from sourceSets.consumer.output
}

task packageProducerJar(type: Jar, description: 'Package the Producer Jar') {
    archiveName = "ikb4stream-$version-producer.jar"
    manifest {
        attributes 'Main-Class': 'com.waves_rsp.ikb4stream.producer.Main'
    }
    from sourceSets.producer.output
}

task packageWeatherJar(type: Jar, description: 'Package the Weather Jar') {
    archiveName = "resources/datasource/ikb4stream-$version-datasource-weather.jar"
    from sourceSets.datasource_meteo.output
}

task packageRssJar(type: Jar, description: 'Package the RSS Jar') {
    archiveName = "resources/datasource/ikb4stream-$version-datasource-rss.jar"
    from sourceSets.datasource_rss.output
}

task packageKafkaCommunicationJar(type: Jar, description: 'Package the Kafka Communication Jar') {
    archiveName = "resources/communication/ikb4stream-$version-communication-kafka.jar"
    from sourceSets.communication_kafka.output
}

task copyConfigProperties(type: Copy) {
    from 'resources/config.properties'
    into 'build/libs/resources/'
}

task zipBuild(type: Zip) {
    classifier = 'all'
    from 'build/libs'
}

task packageAll(dependsOn: ['copyConfigProperties', 'packageConsumerJar', 'packageProducerJar', 'packageWeatherJar', 'packageRssJar', 'packageKafkaCommunicationJar']) {

}

task ci(dependsOn: ['packageAll', 'zipBuild']) {
    tasks.findByName('zipBuild').mustRunAfter 'packageAll'
}

task testAll(type: Test) {
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.mongodb:mongodb-driver-async:3.2.2'
    compile 'org.apache.jena:jena-arq:2.9.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    compile group: 'org.influxdb', name: 'influxdb-java', version: '2.5'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.6'
    compile group: 'com.rometools', name: 'rome-modules', version: '1.7.1'
    compile 'org.apache.kafka:kafka-streams:0.10.0.1'
    testCompile 'junit:junit:4.11'
}